UPDATE LOG

======= 2014-06-18 =======
Added several databases (AISC 13th Ed. and AISC LRFD 3rd Ed.)
Submitted v1.0 to the App Store for review.
Implemented a tab bar controller and coordinated colors with navigation bar

Possible Future feature updates:
- Either dynamically size property cell to show all description items or tap the scroll view to enlarge in a modal view. (currently there is a way to dynamically size the cell, but it has performs issues for iOS6 and below).
- Add images to property descriptions
- Store each database in a different persistant store so that they can be downloaded/deleted at will

Next Steps:
- Implement Favorites view controller
    - Store favorites in local directory using NSCoding. We do not want to have to access Core Data in order to reach our Favorited shapes.
    - Create a FavoriteShape wrapper class to hold:
        - Shape (AW_Shape)
        - Database name (NSString). This will only be displayed as detailText in a UITableViewCell
        - Appropriate colors (background and tint) for nav bar for database (consider moving UIColor setting for color descriptions (i.e. "black", "maroon") to this program rather than setting it in the import utility and storing it in the CoreData)
        - Date added
- Re-implement iAd banner so that we only have one instance of it (currently it does not dealloc when switching tabs)
- Add icons for tab bar
- Add more databases

======= 2014-06-07 =======
Implemented iAd banner in AW_PropertyViewController
Added index bar to AW_ShapeViewController

Future feature updates:
- Either dynamically size property cell to show all description items or tap the scroll view to enlarge in a modal view. (currently there is a way to dynamically size the cell, but it has performs issues for iOS6 and below).
- Add images to property descriptions

Next Steps:
- Implement the About screen
- Add icons
- Add some more databases
- Prepare for first release!

======= 2014-06-04 =======
Added code to return managed objects to fault in viewDidDisappear, thereby removing memory leak caused by strong reference cycle of managed objects.

Benchmarks:
Memory usage seems to be between 15-25 MB

Future feature updates:
- Either dynamically size property cell to show all description items or tap the scroll view to enlarge in a modal view.
- Add images to property descriptions
- Think of a solution for quick navigation in AW_ShapeViewController's tableView

Next steps:
- Figure out why autolayout is complaining about overconstraints

======= 2014-06-01 =======
Added textField to display property's longDescription
Edited shape's raw data so that display names and sections are more usable for the end user
Added code to display index bar for shape table view, but did not implement index bar because of display/usability issues

Future feature updates:
- Either dynamically size property cell to show all description items or tap the scroll view to enlarge in a modal view.
- Add images to property descriptions
- Think of a solution for quick navigation in AW_ShapeViewController's tableView

Next steps:
- Figure out autolayout in property cell (currently it is underconstrained, but when a vertical constraint is added to the textField, it complains about being overconstrained).
- Return managed objects to faults before dismissing view controllers (to prevent strong retention cycles)

======= 2014-05-31 =======
Finished implementing Properties VC
Created a subclass of TableViewCell for properties (AW_PropertyTableViewCell) with xib
Added methods to AW_Property to return formatted strings for display
Added groups (sections) to Property raw data
Added removal of target-action on unitSystem change when view disappears

Next steps:
- Figure out a way to display each shape's displayNames properly (HSS and PIPE are giving problems, because AISC is stupid with their raw data).
    - HSS Pipes do not have consistent number of decimal places
    - Pipes require special formatting
- Add behavior where selecting property cell causes it to become larger, showing the longDescription
- Return managed objects to faults before dismissing view controllers (to prevent strong retention cycles)

======= 2014-05-27 =======

Added some formatting for shape displayNames and group names
Partially implementd Properties VC

Next steps:
- Figure out a way to display each shape's displayNames properly (HSS and PIPE are giving problems, because AISC is stupid with their raw data).
    - HSS Pipes do not have consistent number of decimal places
    - Pipes require special formatting
- Complete implementation of Properties VC
    - Add groups (sections)
    - Format symbol
    - Display value in the correct format
    - Create custom cell to show long description
- Return managed objects to faults before dismissing view controllers (to prevent strong retention cycles)
- Figure out a better way to implement the flip animation and the isMetric stuff


======= 2014-05-26 =======

Implemented view controller for AW_Shapes
Added target-action to nav bar's unitSystem segmented control to show flip animation
Created AW_InfoBar view
Added group fields to AW_ShapeFamily and AW_Shape (updated import utility)

Next steps:
- Format display name for shapes to look nice (replace X with unicode x and spaces)
- Implement next view controller to show properties for selected shape


======= 2014-05-24 =======

Added shortName and longName fields to database entity.
Import Utility now implements transformation of UIColor to store in Core Data.
ShapeFamily VC uses colors and shortName from AW_Database for nav bar

Next steps:
- Implement the next table view controller for AW_Shapes


======= 2014-05-21 =======

Added navigation VC and shape family VC

Next steps:
- Adjust database model to add a "longName" and "shortName" property to the Databse entity
- Update the import utility to correctly transform a UIColor and store it with AW_Database
- Update this app to unpack the UIColor and use it in the correct locations
- Update the import utility such that the raw shape family import TSV has a column for which database that shape family belongs to
